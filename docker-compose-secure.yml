version: '3.8'

services:
  auth-service:
    build:
      context: ./services/auth-service
      dockerfile: Dockerfile
    ports:
      - "8081:8081"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - SPRING_DATASOURCE_URL=jdbc:mysql://mysql-auth:3306/auth_db?createDatabaseIfNotExist=true
      - SPRING_DATASOURCE_USERNAME=root
      - SPRING_DATASOURCE_PASSWORD=root
      - SPRING_REDIS_HOST=redis
      - EUREKA_CLIENT_SERVICE_URL_DEFAULTZONE=http://discovery-service:8761/eureka/
    depends_on:
      - mysql-auth
      - redis
      - discovery-service
    networks:
      - microservices-network

  mysql-auth:
    image: mysql:8.0
    environment:
      - MYSQL_ROOT_PASSWORD=root
      - MYSQL_DATABASE=auth_db
    ports:
      - "3307:3306"
    volumes:
      - mysql_auth_data:/var/lib/mysql
    networks:
      - microservices-network

  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    networks:
      - microservices-network

  discovery-service:
    build:
      context: ./services/discovery-service
      dockerfile: Dockerfile
    ports:
      - "8761:8761"
    networks:
      - microservices-network

  gateway-service:
    build:
      context: ./services/gateway-service
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - EUREKA_CLIENT_SERVICE_URL_DEFAULTZONE=http://discovery-service:8761/eureka/
    depends_on:
      - discovery-service
      - auth-service
    networks:
      - microservices-network

  main-service:
    build:
      context: ./services/main-service
      dockerfile: Dockerfile
    ports:
      - "8082:8082"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres-main:5432/social_network_db
      - SPRING_DATASOURCE_USERNAME=postgres
      - SPRING_DATASOURCE_PASSWORD=postgres
      - EUREKA_CLIENT_SERVICE_URL_DEFAULTZONE=http://discovery-service:8761/eureka/
    depends_on:
      - postgres-main
      - discovery-service
      - auth-service
    networks:
      - microservices-network

  chat-service:
    build:
      context: ./services/chat-service
      dockerfile: Dockerfile
    ports:
      - "8083:8083"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - SPRING_DATA_MONGODB_URI=mongodb://mongo-chat:27017/chat_db
      - EUREKA_CLIENT_SERVICE_URL_DEFAULTZONE=http://discovery-service:8761/eureka/
    depends_on:
      - mongo-chat
      - discovery-service
      - auth-service
    networks:
      - microservices-network

  search-service:
    build:
      context: ./services/search-service
      dockerfile: Dockerfile
    ports:
      - "8084:8084"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - SPRING_ELASTICSEARCH_URIS=http://elasticsearch:9200
      - EUREKA_CLIENT_SERVICE_URL_DEFAULTZONE=http://discovery-service:8761/eureka/
    depends_on:
      - elasticsearch
      - discovery-service
      - auth-service
    networks:
      - microservices-network

  notification-service:
    build:
      context: ./services/notification-service
      dockerfile: Dockerfile
    ports:
      - "8085:8085"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - EUREKA_CLIENT_SERVICE_URL_DEFAULTZONE=http://discovery-service:8761/eureka/
    depends_on:
      - discovery-service
      - auth-service
    networks:
      - microservices-network

  postgres-main:
    image: postgres:15
    environment:
      - POSTGRES_DB=social_network_db
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    ports:
      - "5432:5432"
    volumes:
      - postgres_main_data:/var/lib/postgresql/data
    networks:
      - microservices-network

  mongo-chat:
    image: mongo:7
    ports:
      - "27017:27017"
    volumes:
      - mongo_chat_data:/data/db
    networks:
      - microservices-network

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.13.4
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
    ports:
      - "9200:9200"
    volumes:
      - elasticsearch_data:/usr/share/elasticsearch/data
    networks:
      - microservices-network

volumes:
  mysql_auth_data:
  postgres_main_data:
  mongo_chat_data:
  elasticsearch_data:

networks:
  microservices-network:
    driver: bridge
