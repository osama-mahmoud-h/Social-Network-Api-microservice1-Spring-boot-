spring.config.import=optional:file:.env[.properties]
# ======================= App =======================
spring.application.name=social_network_app_dev
server.port=8083

# ======================= Database =======================
spring.datasource.url=jdbc:postgresql://localhost:5432/${DATABASE_NAME}
spring.datasource.username=${DATABASE_USERNAME}
spring.datasource.password=${DATABASE_PASSWORD}
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
spring.datasource.driver-class-name=org.postgresql.Driver

# ======================= JWT =======================
app.jwtSecret=${JWT_SECRET_KEY}
app.jwtExpirationMs=${JWT_EXPIRE_IN_MS}
token.signing.key=${JWT_SINGING_KEY}

# ======================= Hibernate =======================
# Hibernate ddl auto (create, create-drop, validate, update)
spring.jpa.hibernate.ddl-auto=update
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.show-sql=true
#- avoid lazy initialization error.
spring.jpa.open-in-view=false

# Database connection pool settings
spring.datasource.hikari.connection-timeout=20000
spring.datasource.hikari.maximum-pool-size=5
spring.datasource.hikari.minimum-idle=2
spring.datasource.hikari.idle-timeout=300000
spring.datasource.hikari.max-lifetime=600000
spring.datasource.hikari.pool-name=HikariPool-MainService

# ======================= Swagger =======================
# Swagger/OpenAPI Configuration - Using defaults for Spring Boot 3.4.x
osama_mh.openapi.dev-url=${OPEN_API_DEV_URL}
osama_mh.openapi.prod-url=${OPEN_API_PRODUCTION_URL}
osama_mh.openapi.localhost-url=http://localhost:${PORT:8080}

# Swagger/OpenAPI Configuration
springdoc.swagger-ui.path=/swagger-ui.html
springdoc.api-docs.path=/v3/api-docs
springdoc.swagger-ui.enabled=true

# ======================= encryption =======================
encryption.key=${ENCRYPTION_KEY}

# ======================= File Upload =======================
# Default file upload directory for local development
file.upload-dir=src/main/resources/static/uploads/

# ======================= File Limit =======================
spring.servlet.multipart.enabled=true
# Maximum file size
spring.servlet.multipart.max-file-size=5MB
# Maximum request size
spring.servlet.multipart.max-request-size=6MB

#===================== Mail Sender ==========================
spring.mail.host=${MAIL_SERVICE_HOST}
spring.mail.port=${MAIL_SERVICE_PORT}
spring.mail.username=${MAIL_SERVICE_USERNAME}
spring.mail.password=${MAIL_SERVICE_PASSWORD}
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.starttls.enable=true
spring.mail.properties.mail.smtp.starttls.required=true
spring.mail.properties.mail.smtp.connectiontimeout=5000
spring.mail.properties.mail.smtp.timeout=5000

#===================== Eureka Server Configuration ==========================
#eureka.client.service-url.defaultZone=http://localhost:8761/eureka/
#eureka.instance.prefer-ip-address=true

#===================== Logging Configuration ==========================
# Reduce Hibernate verbose logging
logging.level.org.hibernate.SQL=DEBUG
logging.level.org.hibernate.type.descriptor.sql.BasicBinder=TRACE
logging.level.org.hibernate.orm.connections.pooling=INFO
logging.level.com.zaxxer.hikari=DEBUG
logging.level.com.zaxxer.hikari.HikariConfig=DEBUG

#===================== Kafka Configuration ==========================
# Use port 29092 for local development (outside Docker)
# Inside Docker containers, use kafka:9092
spring.kafka.bootstrap-servers=localhost:29092
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer
spring.kafka.consumer.group-id=main-service-group
spring.kafka.consumer.auto-offset-reset=latest
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.producer.properties.spring.json.add.type.headers=false

#elk stack
logstash.host=localhost
logstash.port=5000
# Enable Spring property resolution in Logback
#logging.config=classpath:logback-spring-prod.xml